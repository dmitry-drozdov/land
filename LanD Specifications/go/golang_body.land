COMMENT		: COMMENT_L|COMMENT_ML
COMMENT_L	: '//' ~[\n\r]*
COMMENT_ML	: '/*' .*? '*/'

ITALIC_QUOTE : '`' .*? '`'

QUOTE		: '"'
SPREAD 		: '...'

// важно пропускать строки и символы, так как в них могут быть [{(, что нарушит парность скобок

STRING		: STRING_STD
STRING_STD	: '"' ('\\"'|'\\\\'|.)*? '"'

CHAR		: '\'' ('\\\''|'\\\\'|.)*? '\''

ID			: '@'?[_a-zA-Z][_0-9a-zA-Z.]*

 
CURVE_BRACKETED : %left '{' %right '}'
ROUND_BRACKETED : %left '(' %right ')'
SQUARE_BRACKETED : %left ('['|GENERAL_ATTRIBUTE_START) %right ']'

NL			: '\n'

content	=	entity*
entity	= control | water_entity 

control = call | if  | for | switch | select

if = 'if' (call | Any)* block
for = 'for' (call | Any)* block

block = '{' (control | Any)* '}'

call = ID '(' (call | Any)*  ')'

water_entity	=	Any

switch = 'switch' (call | Any)* block
select = 'select' block

// в секции recovery ничего не должно быть, чтобы мы могли восстанавливаться из любого места

%%

%parsing {
	recovery
	fragment STRING_INT_CODE
	start content
	skip COMMENT NL STRING CHAR
}

%nodes {
	ghost entity 
	leaf 
	void
}

%customblock {
	start("//+")
	end("//@")
	basetoken COMMENT
}

%markup {
	land func
	headercore(f_name) func
}
